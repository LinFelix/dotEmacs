
* org
  #+begin_src emacs-lisp :results silent
    (calendar-set-date-style 'iso)
  #+end_src

* calf
  #+begin_src emacs-lisp :results silent
    (use-package calfw-org
      :ensure t)
    (use-package calfw-cal
      :ensure t)
    (use-package calfw
      :ensure t
      :config
      (require 'calfw-org)
      (require 'calfw-cal))
  #+end_src

** TODO combine calf and org well
   - reference [[https://github.com/kiwanami/emacs-calfw][github of calfw]]
   - reference [[https://www.emacswiki.org/emacs/Calfw][emacs-wiki of calfw]]

* TODO combine agenda and diary
  - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Advanced-Calendar_002fDiary-Usage.html#Advanced-Calendar_002fDiary-Usage][time display format]]

* TODO can i marry appointments to org?
  - reference [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Appointments.html#Appointments][appointments emacs docs]]

* Org-mode
  #+begin_src emacs-lisp :results silent
    (push 'company-capf company-backends)
    (defun my-org-mode-hook ()
      (add-hook 'completion-at-point-functions 'pcomplete-completions-at-point nil t))
    (add-hook 'org-mode-hook #'my-org-mode-hook)
    (setq org-log-done t)
    (org-babel-load-file "~/.emacs.d/personal/personal-org-mode-config.org")
    (setq org-enforce-todo-dependencies t)
    (setq org-enforce-todo-checkbox-dependencies t)
    (setq org-agenda-skip-scheduled-if-deadline-is-shown nil)
    (setq org-agenda-skip-scheduled-if-done t)
    (setq org-agenda-skip-deadline-if-done t)
    (setq org-agenda-skip-deadline-prewarning-if-scheduled nil)
    (setq org-agenda-skip-timestamp-if-deadline-is-shown nil)
    (setq org-agenda-skip-timestamp-if-done t)
    (global-set-key (kbd "C-c a") 'org-agenda)
    (global-set-key (kbd "C-c A") (kbd "C-c a a"))
  #+end_src

* Notmuch
  #+begin_src emacs-lisp :results silent
    (use-package notmuch
      :ensure t)
  #+end_src


* Babel
  #+begin_src emacs-lisp :results silent
    (setq org-src-fontify-natively t)
    (org-babel-do-load-languages
     'org-babel-load-languages
     '((python . t)
       (ipython . t)
       (octave . t)
       (haskell . t)
       (maxima . t)
       (fortran . t)))
    (setq  org-confirm-babel-evaluate 'nil)
  #+end_src

