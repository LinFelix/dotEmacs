* multi-term
   #+BEGIN_SRC emacs-lisp :results silent
     (use-package multi-term
       :ensure t
       :config
         (setq multi-term-dedicated-skip-other-window-p t)
         (setq multi-term-dedicated-select-after-open-p t)
       :bind ("C-S-t" . multi-term))
   #+END_SRC


* Evil
** just evil
   #+BEGIN_SRC emacs-lisp :results silent
     (use-package evil
       :diminish "E"
       :ensure t
       :init (setq-default evil-disable-insert-state-bindings t))
   #+END_SRC


* paredit
  #+BEGIN_SRC emacs-lisp :results silent
    (use-package paredit
      :diminish ""
      :ensure t)
  #+END_SRC

* magit

* VC

* emms
  #+begin_src emacs-lisp :results silent
    (use-package emms
      :ensure t)
    (require 'emms-setup)
    (emms-add-directory-tree "~/music")
    (emms-all)
    (emms-default-players)

  #+end_src


* gnus

* multiples Cursors
  #+begin_src emacs-lisp :results silent
    (use-package multiple-cursors
      :ensure t
      :diminish ""
      :config
      (add-hook 'prog-mode-hook 'multiple-cursors-mode)
      (add-hook 'text-mode-hook 'multiple-cursors-mode)
      (global-set-key (kbd "C->") 'mc/mark-next-like-this)
      (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
      (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this))
  #+end_src
